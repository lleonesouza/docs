{"version":3,"sources":["src/config/index.ts","src/resources/index.ts","src/resources/client.ts","src/style/buttons.ts","src/style/divs.ts","src/style/list.ts","src/style/containers.ts","src/style/navs.ts","src/style/svg.ts","src/style/index.ts","src/component/central/bodyParameters.tsx","src/lottie/index.tsx","src/component/central/top.tsx","src/component/central/warnnings.tsx","src/component/central/index.tsx","src/component/left/endpointsMenu.tsx","src/component/left/index.tsx","src/component/right/codeExample.tsx","src/component/right/reponseExample.tsx","src/component/right/nav.tsx","src/component/right/index.tsx","src/component/index.tsx","src/component/utils/loading.tsx","src/App.tsx","index.tsx"],"names":["require","config","address","client","getDocs","a","axios","get","res","data","makeClient","wrapPromise","promise","status","result","suspender","then","r","e","read","createResources","docs","backgroundMethodColor","method","Simple","styled","div","props","background","color","height","width","display","flexDirection","alignItems","justifyContent","borderRadius","fontsize","margin","border","TryIt","button","cursor","Right","padding","minWidth","paddingTop","borderRight","Header","TopHeader","Description","minHeight","letterSpacing","ResponseExample","BodyInput","BodyUl","ul","listStyle","marign","paddingBottom","BodyLi","li","FieldsUl","gridTemplateColumns","columnGap","FieldsLi","svg","position","LanguagesNav","alignContent","LanguagesLi","PrincipalDiv","left","CentralDiv","NavUl","overflow","InnerNavUl","InnerNavLi","NavLi","Parameters","route","input","setBodyInput","bodyInput","body","Fragment","map","description","required","hasChildren","title","type","Locked","useState","isStopped","isPaused","state","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","top","baseurl","isProtected","url","warnnings","Docs","currentDoc","setCurrentDoc","keys","Object","routes","name","index","key","doc","onClick","toUpperCase","codeExample","console","log","languagueName","requestExample","style","transform","language","darcula","reponseExample","response","paddingLeft","Nav","setCurrentCodeExample","useEffect","Index","initialState","currentCodeExample","output","SubIndex","resource","fistElement","setResponse","Loading","fallback","ReactDOM","unstable_createRoot","document","getElementById","render","App"],"mappings":"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","file":"static/js/main.549793b5.chunk.js","sourcesContent":["require('dotenv').config()\n\nconst DEV =  \"http://localhost:5000/v1\" \nconst PROD = \"https://dev.wivo.io/api/v1\"\n\n\n\nconst config = {\n    address: DEV,\n    // local_address: \"http://localhost:5000/v1\"\n    \n}\n\nexport default config","\nimport makeClient from \"./client\"\n\nconst client = makeClient()\n\nconst wrapPromise = (promise:Promise<any>) => {\n  let status = \"pending\";\n  let result = \"\";\n  let suspender = promise.then(r => {\n    status = \"success\"\n    result = r;\n  }, (e:any) => {\n    status = \"error\"\n    result = e\n  })\n\n\n  return {\n    read() {\n      if(status === \"pending\"){\n        throw suspender\n      }else if(status === \"error\"){\n        throw result\n      }\n      return result\n    }\n  }\n}\n\nconst createResources = () => {\n  return {\n    docs: wrapPromise(client.getDocs()),\n  }\n}\n\n\nexport default createResources","\nimport axios from \"axios\"\nimport config from \"../config\"\nimport {routes} from \"../../@types\"\n\n\nconst makeRequests = () => {\n    return {\n      // Main Router Proxy\n      getDocs: async (): Promise<routes[]> => {\n      \n          const res = await axios.get(`${config.address}/docs`);\n          return res.data;\n      \n      }\n    };\n}\n\n\n\n\nexport default makeRequests","import styled from '@emotion/styled'\n\n\nconst backgroundMethodColor = (method: \"get\" | \"put\" | \"post\" | \"del\") => {\n  switch (method) {\n    case \"get\":\n      return \"green\"\n    case \"put\":\n      return \"purple\"\n    case \"post\":\n      return \"blue\"\n    case \"del\":\n      return \"red\"\n    default:\n      return \"green\"\n  }\n}\n\n// Method Button\nconst Simple = styled.div((props:any) => ({\n  background: backgroundMethodColor(props.color),\n  height: \"25px\",\n  width: \"45px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  borderRadius: \"20px\",\n  fontsize: \"0.6em\",\n  margin: \"5px\",\n  border: \"1px black solid\"\n}))\n\n\nconst TryIt = styled.button((props:any) => ({\n  background: \"black\",\n  height: \"25px\",\n  width: \"65px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  borderRadius: \"10px\",\n  fontsize: \"0.6em\",\n  cursor: \"pointer\",\n  color: \"white\",\n  margin: \"5px\",\n  border: \"1px black solid\"\n}))\n\nexport { Simple }\nexport default { Simple, TryIt }","import styled from '@emotion/styled'\n\nconst Right = styled.div({\n    margin: 0,\n    padding: 0,\n    height: \"150%\",\n    minWidth: \"130px\",\n    width: \"100%\",\n    paddingTop: \"100px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"top\",\n    background: 'black',\n    color: \"white\",\n    borderRight: \"1px yellow solid\"\n})\n\n\n\n// Method Button\nconst Header = styled.div((props:any) => ({\n  background: \"rgba(111,0,111,0.2)\",\n  height: \"300px\",\n  width: \"100%\",\n  margin: 0,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}))\n\nconst TopHeader = styled.div({\n    height: \"60px\",\n    width: \"80%\",\n    margin: 0,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n})\n\nconst Description = styled.div({\n    height: \"140px\",\n    minHeight: \"130px\",\n    width: \"70%\",\n    letterSpacing: \"0.5px\"\n})\n\n\n\nconst TryIt =  styled.div((props:any) => ({\n    background: \"rgba(255,255,255,0.8)\",\n    height: \"60px\",\n    width: \"80%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"30px\"\n  }))\n\nconst ResponseExample = styled.div((props:any) => ({\n    background: \"rgba(255,255,255,0.8)\",\n    height: \"60px\",\n    width: \"80%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"30px\"\n  }))\n\nconst RequestExample = styled.div((props:any) => ({\n    background: \"rgba(255,255,255,0.8)\",\n    height: \"60px\",\n    width: \"80%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"30px\"\n  }))\n\n\n\nconst BodyInput = styled.div((props:any) => ({\n    // background: \"rgba(111,0,111,0.2)\",\n    padding: \"10px\",\n    height: \"100%\",\n    width: \"100%\",\n    margin: 0,\n\n  }))\n\n\n\nexport { Header, TryIt, Right, Description, TopHeader, ResponseExample, BodyInput }\nexport default { Header, TryIt, Right, Description, TopHeader, ResponseExample, BodyInput }","import styled from '@emotion/styled'\n\nconst backgroundMethodColor = (method: \"get\" | \"put\" | \"post\" | \"del\") => {\n    switch (method) {\n        case \"get\":\n            return \"green\"\n        case \"put\":\n            return \"purple\"\n        case \"post\":\n            return \"blue\"\n        case \"del\":\n            return \"red\"\n        default:\n            return \"green\"\n    }\n}\n\n\nconst BodyUl = styled.ul((props: any) => ({\n    height: \"100%\",\n    width: \"90%\",\n    listStyle: \"none\",\n    marign: 0,\n    padding: 0,\n    paddingBottom: \"50px\",\n    paddingTop: \"100px\",\n    borderRadius: \"25px\",\n}))\n\nconst BodyLi = styled.li((props: any) => ({\n    height: \"100px\",\n    width: \"100%\",\n}))\n\n\nconst FieldsUl = styled.ul((props: any) => ({\n    height: \"100%\",\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1.5fr 2fr\",\n    columnGap: \"15px\",\n    marign: 0,\n    padding: 0,\n    width: \"100%\",\n    listStyle: \"none\",\n}))\n\nconst FieldsLi = styled.li((props: any) => ({\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    padding: \"5px\",\n    flexDirection: \"column\",\n    alignItems: \"left\",\n    justifyContent: \"center\",\n}))\n\nexport { BodyUl, BodyLi, FieldsUl, FieldsLi  }\nexport default { BodyUl, BodyLi, FieldsUl, FieldsLi  }","import styled from '@emotion/styled'\n\nconst backgroundMethodColor = (method: \"get\" | \"put\" | \"post\" | \"del\") => {\n  switch (method) {\n    case \"get\":\n      return \"green\"\n    case \"put\":\n      return \"purple\"\n    case \"post\":\n      return \"blue\"\n    case \"del\":\n      return \"red\"\n    default:\n      return \"green\"\n  }\n}\n\n// Method Button\nconst ListMenu = styled.div((props:any) => ({\n  background: backgroundMethodColor(props.color),\n  height: \"25px\",\n  width: \"45px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  borderRadius: \"30px\"\n}))\n\nexport { ListMenu }\nexport default { ListMenu }","import styled from \"@emotion/styled\"\n\nconst LanguagesNav = styled.ul({\n    margin: 0,\n    padding: 0,\n    height: \"70px\",\n    width:  \"100%\",\n    minWidth: \"200px\",\n    background: 'white',\n    color: \"black\",\n    listStyle: \"none\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    cursor: \"pointer\"\n})\n\n\n\nconst LanguagesLi = styled.ul({\n\n    padding: \"20px\",\n    height: \"100px\",\n  \n \n    \n    listStyle: \"none\",\n})\n\nexport default { LanguagesNav, LanguagesLi }","import styled from '@emotion/styled'\n\n\nconst backgroundMethodColor = (method: \"get\" | \"put\" | \"post\" | \"del\") => {\n  switch (method) {\n    case \"get\":\n      return \"green\"\n    case \"put\":\n      return \"purple\"\n    case \"post\":\n      return \"blue\"\n    case \"del\":\n      return \"red\"\n    default:\n      return \"green\"\n  }\n}\n\n// Method Button\nconst Wave = styled.svg((props:any) => ({\n  height: \"100%\",\n  width: \"100%\",\n  position: \"absolute\"\n}))\n\n\n\nexport { Wave }\nexport default { Wave }","import Buttons from \"./buttons\"\nimport Divs from \"./divs\"\nimport Lists from \"./list\"\nimport Containers from \"./containers\"\nimport Svg from \"./svg\"\nimport styled from '@emotion/styled'\nimport Navs from \"./navs\"\n\nconst fontSize = \"22\"\n\n\nconst PrincipalDiv = styled.div({\n    width: \"74vw\",\n    position: \"absolute\",\n    left: \"25vw\",\n    display: \"grid\",\n    height: \"100vh\",\n    gridTemplateColumns: \"1fr 2fr\"\n})\n\n\n\nconst CentralDiv = styled.div({\n    height: \"100%\",\n    width: \"40vw\",\n})\n\n\nconst NavUl = styled.ul({\n    overflow:\"auto\",\n    margin: 0,\n    padding: 0,\n    height: \"100%\",\n    width:  \"25vw\",\n    minWidth: \"200px\",\n    background: 'black',\n    color: \"white\",\n    listStyle: \"none\",\n    position: \"fixed\"\n})\n\n\nconst InnerNavUl = styled.ul({\n    margin: 0,\n    padding: 0,\n    listStyle: \"none\",\n})\n\n\nconst InnerNavLi = styled.li({\n    margin: 0,\n    padding: \"2px\",\n    cursor: \"pointer\",\n    listStyle: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"right\",\n})\n\n\nconst NavLi = styled.li({\n    margin: 0,\n    listStyle: \"none\",\n})\n\n\n\n\n\n\nexport { Navs, PrincipalDiv, Svg, CentralDiv, NavUl, InnerNavUl, NavLi, InnerNavLi, Buttons, Divs,Containers, Lists }","import React from 'react';\nimport { routes } from \"../../../@types\"\nimport { Buttons, Divs, Lists } from \"../../style\"\n\nconst Parameters = ({ route, setBodyInput, bodyInput }: { route: routes, setBodyInput:any, bodyInput:any }) => {\n    const { input } = route\n    return (\n        <Divs.BodyInput>\n            {input ? input.body && <React.Fragment>\n                <Lists.BodyUl>\n                      <h3> Body </h3>\n                    {input.body.map(({ description, hasChildren, required, title, type }) =>\n                        <Lists.BodyLi>\n                            <Lists.FieldsUl>\n                                <Lists.FieldsLi>\n                                    {title}\n                                </Lists.FieldsLi>\n                                <Lists.FieldsLi>\n                                    \n                                    <input />\n\n                                    <em>{type}  {required ? \"required\" : null} </em> \n                                </Lists.FieldsLi>\n                                <Lists.FieldsLi>\n                                    <p>  {description}  </p>\n                                </Lists.FieldsLi>\n                            </Lists.FieldsUl>\n                        </Lists.BodyLi>\n                    )}\n                </Lists.BodyUl>\n            </React.Fragment> : null}\n        </Divs.BodyInput>\n    )\n}\n\n\nexport default Parameters","\n\nimport React, { useState } from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from './key-locker.json'\n \n\nconst Locked = () => {\n\n    const [state, setState] = useState({isStopped: false, isPaused: false})\n\n\n    const buttonStyle = {\n        display: 'block',\n        margin: '10px auto'\n      };\n   \n      const defaultOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: animationData,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n      };\n\n\n    return (\n        <div>\n             <Lottie options={defaultOptions}\n              height={100}\n              width={100}\n              isStopped={state.isStopped}\n              isPaused={state.isPaused}/>\n        </div> \n    )\n}\n\n\n\nexport default Locked\n\nexport { Locked }\n\n","import React, { ReactElement } from 'react'\nimport { routes } from '../../../@types'\nimport { Buttons, Divs } from \"../../style\"\nimport { Locked } from \"../../lottie\"\nimport { Wave } from \"../../img/svg\"\nimport axios from \"axios\"\n\n\n\n\n\n\nexport default function top({ route, baseurl, bodyInput }: { route: routes, baseurl: string, bodyInput:any }): ReactElement {\n    const { title, address, description, method, isProtected } = route\n\n    const url = `${baseurl}${address}`\n\n    const makeRequestMethod = (method: \"get\" | \"put\" | \"post\" | \"del\" | string) => {\n        switch (method) {\n            case \"get\":\n              return axios.get\n            case \"put\":\n              return axios.put\n            case \"post\":\n              return axios.post\n            case \"del\":\n              return axios.delete\n            default:\n              return axios.get\n          }\n    }\n\n    const makeRequest = async () => {\n        const request = makeRequestMethod(method)\n        const res = await request(url, bodyInput)\n        return res\n    }\n\n    return (\n        <Divs.Header>\n            <Divs.TopHeader>\n            <Buttons.Simple color={method}> {method} </Buttons.Simple> <h2> {title}  </h2>\n                {isProtected ? <Locked /> : null}\n            </Divs.TopHeader>\n\n            <Divs.Description>\n                <p> {description} </p>\n            </Divs.Description>\n\n            <Divs.TryIt>\n                 <p> {url} </p>\n                <Buttons.TryIt> Try It! </Buttons.TryIt>\n            </Divs.TryIt>\n        </Divs.Header>\n    )\n}\n","import React, { ReactElement } from 'react'\nimport { routes } from '../../../@types'\n// import { Buttons } from \"../../style\"\n\n\nexport default function warnnings({ }: { route: routes }): ReactElement {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport BodyParameters from \"./bodyParameters\"\nimport Top from \"./top\"\nimport Warnnings from \"./warnnings\"\nimport { routes } from \"../../../@types\"\nimport { CentralDiv } from '../../style';\n\nconst Docs = ({ currentDoc, baseurl, setBodyInput, bodyInput }: \n    { currentDoc: routes,\n         baseurl:string, \n        setBodyInput:any,\n         bodyInput:any, \n        setResponse:any \n    }) => {\n    return (\n        <CentralDiv>\n            <Top route={currentDoc} baseurl={baseurl} bodyInput={bodyInput} />\n            <BodyParameters setBodyInput={setBodyInput} bodyInput={bodyInput} route={currentDoc} />\n            <Warnnings route={currentDoc} />\n        </CentralDiv>\n    )\n}\n\n\nexport default Docs","import React from \"react\";\nimport { NavUl, InnerNavUl, NavLi, InnerNavLi, Buttons } from \"../../style\"\nimport { routes } from \"../../../@types\"\n\nexport default ({ setCurrentDoc, docs }: { setCurrentDoc: any, docs: any }) => {\n  const keys = Object.keys(docs.routes)\n  return (\n    <NavUl>\n      {keys.map((name: string, index) =>\n        <NavLi key={index}>\n          <h2>{name}</h2>\n          <InnerNavUl>\n            {\n              docs.routes[name].map((doc: routes, index: number) =>\n                <InnerNavLi key={index} onClick={() => setCurrentDoc(doc)}>\n                  <Buttons.Simple color={doc.method} >  {doc.method.toUpperCase()}  </Buttons.Simple>\n                  {doc.title}\n                </InnerNavLi>)\n            }\n          </InnerNavUl>\n        </NavLi>\n      )}\n    </NavUl>\n  )\n}\n","import React, { ReactElement } from 'react'\nimport Nav from \"./endpointsMenu\"\n\n\nexport default function index({\n  setCurrentDoc,\n  setBodyInput,\n  docs\n}: {\n  setCurrentDoc: any,\n  setBodyInput:any,\n  docs: any\n}): ReactElement {\n  return (\n      <Nav setCurrentDoc={setCurrentDoc} docs={docs} />\n  )\n}\n","import React, { ReactElement } from 'react'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport routes from '../../../@types';\n\ninterface Props {\n  codeExample:  {\n    languagueName: string | null;\n    requestExample: string | null;\n    responseExample: string | null;\n} | null\n}\n\n\n\nexport default function codeExample({ codeExample }: Props): ReactElement {\n  const codeString = '(num) => num + 1';\n  console.log(codeExample)\n\n   {/* \n        <h2> {codeExample.requestExample} </h2>\n        <h2> {codeExample.responseExample} </h2> */}\n\n        console.log(codeExample)\n\n        if(codeExample && codeExample.languagueName && codeExample.requestExample){\n          return (\n            <div style={{height: \"auto\", width: \"50vw\",    transform: \"scale(0.67)\"}}>\n              \n              <SyntaxHighlighter language={codeExample.languagueName} style={darcula}>\n        \n        \n            {codeExample.requestExample}\n               \n              </SyntaxHighlighter>\n            </div>\n          )\n        }else{\n           return (\n    <p> \n      No Request Example\n    </p>\n           )\n        }\n  \n  \n}\n","import React, { ReactElement } from 'react'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\ninterface Props {\n    response:any\n}\n\nexport default function reponseExample({response}: Props): ReactElement {\n    console.log(\"response\", response)\n    return (\n        <div>\n           <h3 style={{ paddingLeft: \"200px\", margin: \"auto\"}}>Response Example: (200) </h3>\n\n        \n           <div style={{height: \"auto\", width: \"50vw\",  background: \"green\", transform: \"scale(0.67)\"}}> \n           <SyntaxHighlighter language=\"javascript\" style={darcula}>\n        \n        \n            {response.data}\n           \n          </SyntaxHighlighter>\n     \n           </div>\n        </div>\n    )\n}\n","import React, { ReactElement, useEffect } from 'react'\nimport routes from '../../../@types';\nimport {Navs } from \"../../style\"\n\ninterface Props {\n    currentDoc: routes\n    setCurrentCodeExample: any\n}\n\nexport default function Nav({ currentDoc, setCurrentCodeExample }: Props): ReactElement {\n    useEffect(() => {\n        if(currentDoc.codeExample){\n        setCurrentCodeExample(currentDoc.codeExample[0])\n        }\n      });\n    if (currentDoc && currentDoc.codeExample) {\n        return (\n            <Navs.LanguagesNav>\n                {currentDoc.codeExample.map((codeExample) =>\n                    <Navs.LanguagesLi onClick={() => setCurrentCodeExample(codeExample)} >\n                        {codeExample.languagueName}\n                    </Navs.LanguagesLi>\n                )}\n            </Navs.LanguagesNav>\n        )\n    } else {\n        return (\n            <React.Fragment/>\n        )\n    }\n}\n","import React, { ReactElement, useState } from 'react'\nimport CodeExample from \"./codeExample\"\nimport ResponseExample from \"./reponseExample\"\nimport Nav from \"./nav\"\nimport { Divs, Buttons } from \"../../style\"\nimport routes from \"../../../@types/index\"\n\ninterface Props {\n    currentDoc:routes\n}\n\n\n\n\nexport default function Index({ currentDoc }: Props): ReactElement {\n    const initialState = currentDoc && currentDoc.codeExample ? currentDoc.codeExample[0] : null\n    const [currentCodeExample, setCurrentCodeExample] = useState(initialState)\n    return (\n        <Divs.Right>\n            <Nav\n                currentDoc={currentDoc}\n                setCurrentCodeExample={setCurrentCodeExample}\n            />\n\n            <CodeExample\n                codeExample={currentCodeExample}\n            />\n\n            <ResponseExample\n                response={currentDoc.output[200]}\n            />\n        </Divs.Right>\n    )\n}\n","import React, { useState, Fragment } from \"react\"\nimport { PrincipalDiv } from \"../style\"\nimport Central from \"./central\"\nimport Left from \"./left\"\nimport Right from \"./right\"\n\nconst SubIndex = ({ resource }: { resource: any }) => {\n    const docs = resource.docs.read()\n    const fistElement = Object.keys(docs.routes)[0]\n    const [currentDoc, setCurrentDoc] = useState(docs.routes[fistElement][0])\n    const [bodyInput, setBodyInput] = useState(currentDoc.input.body)\n    const [response, setResponse] = useState({})\n\n    return (\n       <Fragment> \n            <Left\n                setCurrentDoc={setCurrentDoc}\n                setBodyInput={setBodyInput}\n                docs={docs}\n            />\n        <PrincipalDiv>\n            <Central\n                setResponse={setResponse}\n                currentDoc={currentDoc}\n                bodyInput={bodyInput}\n                setBodyInput={setBodyInput}\n                baseurl={docs.baseurl}\n            />\n\n\n            <Right\n                currentDoc={currentDoc}\n            />\n        </PrincipalDiv>\n       </Fragment>\n           \n    )\n}\n\nexport default SubIndex","\nimport React from \"react\"\n\n\nconst Loading = () => {\n    return (\n        <div>\n            loading...\n        </div>\n    )\n}\n\n\n\nexport default Loading","import React, { Suspense } from \"react\"\nimport createResources from \"./resources\";\nimport SubIndex from \"./component\"\nimport Loading from \"./component/utils/loading\"\n\nconst resource = createResources();\n\nconst Index = () => {\n  return (\n      <Suspense fallback={<Loading />}>\n        <SubIndex resource={resource} />\n      </Suspense>\n  );\n}\n\n\nexport default Index\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './src/App';\n\n\n// @ts-ignore\nReactDOM.unstable_createRoot(document.getElementById('root')).render(<App/>)\n"],"sourceRoot":""}